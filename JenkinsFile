pipeline {
	agent any
	environment {
        GITHUB_CREDENTIALS = credentials('github-credentials-id')  // Usa el ID de la credencial
    }
	stages {		

        stage('Fusionar a Pruebas'){
             when {
                branch 'Pruebas'
            }
            steps{
                echo "Fusionando desarrollo a pruebas"
            	sh '''
				    chmod +x /var/lib/jenkins/workspace/Proyecto-IngSof_Pruebas/scripts/BranchPruebas.sh
                	/var/lib/jenkins/workspace/Proyecto-IngSof_Pruebas/scripts/BranchPruebas.sh
            	'''
            }
        }
        stage('Desplegar en pruebas') {
			 when {
                branch 'Pruebas'
            }
        	steps {
            	echo "Desplegando en servidor de pruebas"
            	sh '''
                	chmod +x /var/lib/jenkins/workspace/Proyecto-IngSof_Pruebas/scripts/DesplieguePruebas.sh
                	/var/lib/jenkins/workspace/Proyecto-IngSof_Pruebas/scripts/DesplieguePruebas.sh
            	'''
        	}
    	}
		stage('Sincronizacion a Produccion') {
			steps {
				 script {
                    REPO_DIR = "/var/lib/jenkins/workspace/Clone_Repository/Jenkins_Proyecto"
                    BRANCH = "main"
                    TESTING_BRANCH = "Pruebas"

                    // Verificar que el repositorio ya esté en el directorio
                    dir(REPO_DIR) {
                        // Asegurarnos de estar en el directorio del repositorio y de hacer un checkout de la rama principal
                        sh 'git fetch origin'
                        sh 'git checkout $BRANCH'
                        
                        // Hacer el merge de la rama de pruebas a la principal
                        sh 'git merge origin/$TESTING_BRANCH'

                        // Empujar los cambios a la rama principal en el repositorio remoto
                        sh 'git push origin $BRANCH'

                        // Mensaje final de sincronización
                        echo "CAMBIOS SINCRONIZADOS CORRECTAMENTE A PRODUCCION"
                    }
                }

				}
			
    }

    }
    	
  }